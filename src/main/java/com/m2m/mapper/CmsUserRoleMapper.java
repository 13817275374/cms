package com.m2m.mapper;

import com.m2m.domain.CmsUserRole;
import com.m2m.domain.CmsUserRoleExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CmsUserRoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    long countByExample(CmsUserRoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int deleteByExample(CmsUserRoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Delete({
        "delete from cms_user_role",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Insert({
        "insert into cms_user_role (id, user_id, ",
        "role_id, created_at)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{roleId,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(CmsUserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int insertSelective(CmsUserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    List<CmsUserRole> selectByExample(CmsUserRoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Select({
        "select",
        "id, user_id, role_id, created_at",
        "from cms_user_role",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.m2m.mapper.CmsUserRoleMapper.BaseResultMap")
    CmsUserRole selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByExampleSelective(@Param("record") CmsUserRole record, @Param("example") CmsUserRoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByExample(@Param("record") CmsUserRole record, @Param("example") CmsUserRoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByPrimaryKeySelective(CmsUserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cms_user_role
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Update({
        "update cms_user_role",
        "set user_id = #{userId,jdbcType=INTEGER},",
          "role_id = #{roleId,jdbcType=INTEGER},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(CmsUserRole record);
}