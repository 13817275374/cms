package com.m2m.mapper;

import com.m2m.domain.AppAnchor;
import com.m2m.domain.AppAnchorExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface AppAnchorMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    long countByExample(AppAnchorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int deleteByExample(AppAnchorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Delete({
        "delete from app_anchor",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Insert({
        "insert into app_anchor (id, real_name, ",
        "comment, uid, created_at)",
        "values (#{id,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, ",
        "#{comment,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(AppAnchor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int insertSelective(AppAnchor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    List<AppAnchor> selectByExample(AppAnchorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Select({
        "select",
        "id, real_name, comment, uid, created_at",
        "from app_anchor",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("com.m2m.mapper.AppAnchorMapper.BaseResultMap")
    AppAnchor selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByExampleSelective(@Param("record") AppAnchor record, @Param("example") AppAnchorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByExample(@Param("record") AppAnchor record, @Param("example") AppAnchorExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    int updateByPrimaryKeySelective(AppAnchor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table app_anchor
     *
     * @mbg.generated Thu Jan 18 10:54:32 CST 2018
     */
    @Update({
        "update app_anchor",
        "set real_name = #{realName,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "uid = #{uid,jdbcType=BIGINT},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(AppAnchor record);
}